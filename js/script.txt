
// Create the client, specify the endpoint URL
client = GraphQL.makeClient("https://pangaea-interviews.now.sh/api/graphql");

// Set headers to be passed with each request
// The GitHub API specifies authentication via the Authorization header
// client.setHeader("Authorization", "bearer " + auth_token);

// Create and Assign GraphQL query variable
let query = "query {products {image_url title price(currency: USD)}}";

// Pass the query and a callback to handle the response
client.query(query, function (response) {
  var listProducts = document.getElementById("content");

  // iterate through the response to create product items
  Object.entries(response).forEach(([key, val]) => {
    for (let i = 0; i < val["products"].length; i++) {
      const element = val["products"][i];
      this.image_url = element["image_url"];
      this.title = element["title"];
      this.price = element["price"].toFixed(2);
      this.counter = i;
      createSingleProductDOM();
    }
  });

  // Create product item HTML element template
  function createSingleProductDOM() {
    let createSingleProduct = document.createElement("div");
    createSingleProduct.classList.add(
      "single-product",
      "col-md-4",
      "item_" + this.counter
    );

    // Create and assign values to the Various HTML elements and nodes
    createSingleProduct.innerHTML =
      '<div class="product-image-container"><img src="' +
      this.image_url +
      '" class="product-image"></div><h3 class="product-title">' +
      this.title +
      '</h3><p class="single-product-price">From $<span>' +
      this.price +
      '</span></p><button class="btn btn-primary" data-fetch="' +
      "item_" +
      this.counter +
      '">Add to Cart</button>';
    listProducts.appendChild(createSingleProduct);
  }

  // Toggle between cart content slide-sidebar
  function toggleCartModal() {
    let modalBtn = document.querySelector("[data-toggle='modal']");
    let targetModal = document.querySelector(
      modalBtn.getAttribute("data-target")
    );
    // console.log(targetModal);
    modalBtn.addEventListener("click", function () {
      targetModal.classList.add("show");
      targetModal.style.display = "block";
      document.querySelector("html").style.overflow = "hidden";
    });

    document
      .querySelector(".closeModal")
      .addEventListener("click", function () {
        targetModal.classList.remove("show");
        setTimeout(function () {
          targetModal.style.display = "none";
          document.querySelector("html").style.overflow = "auto";
        }, 300);
      });
  }

  // This method helps add product onClick to Cart Items
  function addToCart() {
    //  Select All Add To Cart buttons and iterate click event listener
    let addToCartBtn = document.querySelectorAll("button[data-fetch*='item_']");

    for (let i = 0; i < addToCartBtn.length; i++) {
      addToCartBtn[i].addEventListener("click", function () {
        // Get all necessary variables from clicked item product and list Cart sub-total
        let itemSelect = document.querySelector("#content .item_" + i);
        let addToCartSubTotal = parseFloat(
          document
            .querySelector(".subtotal .subtotal-amount")
            .textContent.substring(1),
          2
        );
        let addToCartQuantityTotal = parseInt(
          document.querySelector("#topbar .cart .notice").textContent
        );
        let itemID = addToCartBtn[i].getAttribute("data-fetch");
        let itemImage_url = itemSelect.querySelector(".product-image").src;
        let itemPrice = parseFloat(
          itemSelect.querySelector(".single-product-price span").textContent,
          2
        );
        let itemTitle = itemSelect.querySelector(".product-title").textContent;

        // fire the function to create cart item and generate cart item quantity count
        createSingleCartItemDOM(itemID, itemImage_url, itemPrice, itemTitle);

        // Compute and Display results in various respective elements
        addToCartSubTotal = addToCartSubTotal + itemPrice;
        addToCartQuantityTotal = addToCartQuantityTotal + 1;
        document.querySelector(".subtotal .subtotal-amount").innerHTML =
          "$" + addToCartSubTotal.toFixed(2);
        if (
          (document.querySelector("#topbar .cart .notice").style.display =
            "none")
        ) {
          document.querySelector("#topbar .cart .notice").style.display =
            "block";
        }
        document.querySelector(
          "#topbar .cart .notice"
        ).innerHTML = addToCartQuantityTotal;

        // Slide open the List Cart Modal window
        let listCartModal = document.getElementById("cartSlideBar");
        listCartModal.classList.add("show");
        listCartModal.style.display = "block";
        document.querySelector("html").style.overflow = "hidden";

        // Call Increment function
        increaseItemToCart();
        decreaseItemFromCart();
        // if (
        //   document.querySelectorAll("#list-cart-items .quantity .increment")
        //     .clicked == true
        // ) {
        //   increaseItemToCart(addToCartSubTotal, addToCartQuantityTotal);
        // }
      });
    }
  }

  // Create Item to add to Cart List and return quantity count
  let createSingleCartItemDOM = function (
    itemID,
    itemImage_url,
    itemPrice,
    itemTitle
  ) {
    // Get List Cart Items container element
    let listCartItems = document.querySelector("#list-cart-items");
    // console.log(itemID);
    if (listCartItems.querySelector("." + itemID)) {
      //get the quantity of item selected and increment it
      let itemQuantity = parseInt(
        listCartItems.querySelector(
          "." + itemID + " .quantity-selector .counter"
        ).textContent
      );
      itemQuantity = itemQuantity + 1;
      listCartItems.querySelector(
        ".quantity-selector .counter"
      ).innerHTML = itemQuantity;
    } else {
      let createSingleCartItem = document.createElement("div");
      createSingleCartItem.classList.add("card-body");
      createSingleCartItem.classList.add(itemID);
      createSingleCartItem.innerHTML =
        '<div class="cart-item row"><div class="col-sm-12 list-item-close"><i class="feather icon-x"></i></div></i><div class="product-description col-sm-8"><h6>' +
        itemTitle +
        '</h6><div><span class="product-personalize">MADE FOR:</span> Ama Eze</div><div>Combination</div><div>Two Month supply shipped every two months</div><div>Cancel or change frequency anytime</div></div><div class="product-image col-sm-4"><img src="' +
        itemImage_url +
        '" /></div><div class="quantity col-sm-12" data-fetch="' +
        itemID +
        '"><div class="quantity-selector"><span class="decrement">-</span><span class="counter">1</span><span class="increment">+</span></div><div class="price">$' +
        itemPrice +
        "</div></div></div>";
      listCartItems.appendChild(createSingleCartItem);
    }
  };

  // Increment List Cart items by clicks
  function increaseItemToCart() {
    // Get all list items increment button
    let listItemsControls = document.querySelectorAll(
      "#list-cart-items .quantity"
    );
    if (listItemsControls.length >= 1) {
      for (let j = 0; j < listItemsControls.length; j++) {
        listItemsControls[j]
          .querySelector(".increment")
          .addEventListener("click", function () {
            // Get all necessary Variables to be manipulated
            let addToCartSubTotal = parseFloat(
              document
                .querySelector(".subtotal .subtotal-amount")
                .textContent.substring(1),
              2
            );
            let addToCartQuantityTotal = parseInt(
              document.querySelector("#topbar .cart .notice").textContent
            );
            var itemQuantity = parseInt(
              listItemsControls[j].querySelector(".counter").textContent
            );

            let itemPrice = parseFloat(
              listItemsControls[j]
                .querySelector(".price")
                .textContent.substring(1),
              2
            );

            // Compute and Display results in various respective elements
            itemQuantity = itemQuantity + 1;
            listItemsControls[j].querySelector(
              ".counter"
            ).innerHTML = itemQuantity;
            document.querySelector(".subtotal .subtotal-amount").innerHTML =
              "$" + (addToCartSubTotal + itemPrice).toFixed(2);
            if (
              (document.querySelector("#topbar .cart .notice").style.display =
                "none")
            ) {
              document.querySelector("#topbar .cart .notice").style.display =
                "block";
            }
            document.querySelector("#topbar .cart .notice").innerHTML =
              addToCartQuantityTotal + 1;
          });
      }
    }
  }

  //Decrement List Cart Items by Clicks
  function decreaseItemFromCart() {
    // Get all list items increment button
    let listItemContainer = document.getElementById("list-cart-items");
    let listItemsControls = listItemContainer.querySelectorAll(".quantity");
    if (listItemsControls.length >= 1) {
      for (let j = 0; j < listItemsControls.length; j++) {
        listItemsControls[j]
          .querySelector(".decrement")
          .addEventListener("click", function () {
            // Get all necessary Variables to be manipulated
            let itemID = listItemsControls[j].getAttribute("data-fetch");
            let addToCartSubTotal = parseFloat(
              document
                .querySelector(".subtotal .subtotal-amount")
                .textContent.substring(1),
              2
            );
            let addToCartQuantityTotal = parseInt(
              document.querySelector("#topbar .cart .notice").textContent
            );
            var itemQuantity = parseInt(
              listItemsControls[j].querySelector(".counter").textContent
            );

            let itemPrice = parseFloat(
              listItemsControls[j]
                .querySelector(".price")
                .textContent.substring(1),
              2
            );

            if (itemQuantity > 1) {
              // Compute and Display results in various respective elements
              itemQuantity = itemQuantity - 1;
              listItemsControls[j].querySelector(
                ".counter"
              ).innerHTML = itemQuantity;
              document.querySelector(".subtotal .subtotal-amount").innerHTML =
                "$" + (addToCartSubTotal - itemPrice).toFixed(2);
              if (
                (document.querySelector("#topbar .cart .notice").style.display =
                  "none")
              ) {
                document.querySelector("#topbar .cart .notice").style.display =
                  "block";
              }
              document.querySelector("#topbar .cart .notice").innerHTML =
                addToCartQuantityTotal - 1;
            } else {
              // Set everything back to ZERO
              document.querySelector(".subtotal .subtotal-amount").innerHTML =
                "$0.00";
              document.querySelector("#topbar .cart .notice").innerHTML = "0";
              if (
                (document.querySelector("#topbar .cart .notice").style.display =
                  "block")
              ) {
                document.querySelector("#topbar .cart .notice").style.display =
                  "none";
              }
              listItemContainer.removeChild(
                listItemContainer.querySelector("." + itemID)
              );
            }
          });
      }
    }
  }

  // fire the functions
  toggleCartModal();
  addToCart();
});
